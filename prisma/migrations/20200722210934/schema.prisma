datasource db {
    provider = "sqlite"
    url = "***"
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id             Int       @id @default(autoincrement())
    email          String    @unique
    name           String
    phoneNumber    String?
    avatarUrl      String?
    timeZone       String?
    disabled       Boolean?  @default(false)
    registeredAt   DateTime  @default(now()) // ISO Date
    lastLoginAt    DateTime? // ISO Date
    lastActivityAt DateTime? // ISO Date
    teacher        Teacher?
}

model Teacher {
    userId  Int             @id
    user    User            @relation(fields: [userId], references: [id])
    classes TechingCourse[]
}

model TechingCourse {
    id         Int                   @id @default(autoincrement())
    course     Course                @relation(fields: [courseId], references: [id])
    courseId   Int
    teacher    Teacher               @relation(fields: [teacherId], references: [userId])
    teacherId  Int
    schedule   TechingCourseSchedule @relation(fields: [scheduleId], references: [id])
    scheduleId Int
    color      String
    lessons    Lesson[]
}

model Course {
    id            Int             @id @default(autoincrement())
    name          String          @unique
    topics        Topic[]
    grade         Int?
    techingCourse TechingCourse[]
}

model TechingCourseSchedule {
    id        Int           @id @default(autoincrement())
    class     TechingCourse
    /// beginning of the course
    startDate DateTime?
    /// end of the course
    endDate   DateTime?
    day       Int?
    period    Period?       @relation(fields: [periodId], references: [id])
    periodId  Int?
}

model Lesson {
    id              Int            @id @default(autoincrement())
    title           String
    descrition      String?
    topics          Topic[]
    techingCourse   TechingCourse? @relation(fields: [techingCourseId], references: [id])
    techingCourseId Int?
}

model StudyPlan {
    id    Int     @id @default(autoincrement())
    grade Int?
    topic Topic[]
}

model Topic {
    id          Int        @id @default(autoincrement())
    title       String
    description String
    studyPlan   StudyPlan? @relation(fields: [studyPlanId], references: [id])
    studyPlanId Int?
    lesson      Lesson?    @relation(fields: [lessonId], references: [id])
    lessonId    Int?
    course      Course?    @relation(fields: [courseId], references: [id])
    courseId    Int?
}

model Period {
    id                    Int                     @id @default(autoincrement())
    /// hh:mm
    startTime             String
    /// Minutes
    duration              Int
    techingCourseSchedule TechingCourseSchedule[]
}
