### This file was generated by Nexus Schema
### Do not make changes to this file directly


scalar DateTime

type Mutation {
  createTimetable(periods: [PeriodInput!]!): Timetable!
}

"""
PageInfo cursor, as defined in https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  The cursor corresponding to the last nodes in edges. Null if the connection is empty.
  """
  endCursor: String

  """
  Used to indicate whether more edges exist following the set defined by the clients arguments.
  """
  hasNextPage: Boolean!

  """
  Used to indicate whether more edges exist prior to the set defined by the clients arguments.
  """
  hasPreviousPage: Boolean!

  """
  The cursor corresponding to the first nodes in edges. Null if the connection is empty.
  """
  startCursor: String
}

type Period {
  duration: Int!
  id: Int!
  startTime: String!
}

input PeriodInput {
  """Duration of the period in minutes"""
  duration: Int!

  """Start time of the period in HH:mm format"""
  startTime: String!
}

input PeriodWhereUniqueInput {
  id: Int
}

type Query {
  me: User!
  timetables(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): TimetableConnection!
}

type Timetable {
  id: Int!
  periods(after: PeriodWhereUniqueInput, before: PeriodWhereUniqueInput, first: Int, last: Int): [Period!]!
}

type TimetableConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [TimetableEdge]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type TimetableEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: Timetable!
}

type User {
  avatar: UserAvatar!
  email: String!
  id: Int!
  lastLoginAt: DateTime
  name: String!
  phone: UserPhone!
  phoneNumber: String
  registeredAt: DateTime!
  timeZone: String
}

type UserAvatar {
  url: String
}

type UserPhone {
  number: String
}
